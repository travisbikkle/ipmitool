# vi: set et ts=2 sw=2 :
name: build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows:
    strategy:
      matrix:
        os: [ windows-2022 ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: install dependencies
      run: |-
        choco install cygwin -y
        choco install cyg-get -y
        # Line continuation in PowerShell is backtick. Weird as Windows.
        cyg-get gcc-g++ `
                make `
                automake `
                autoconf `
                m4 `
                libtool `
                libncurses-devel `
                libreadline-devel `
                libssl-devel `
                dos2unix `
                wget
        echo "C:/tools/cygwin/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:/tools/cygwin/usr/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - uses: actions/checkout@v2
    - name: convert line ends
      # checkout action on Windows apparently converts line ends
      # so we have to convert them back because cygwin bash can't
      # can't handle Windows line ends
      run: dos2unix bootstrap configure.ac csv-revision
    - name: bootstrap
      run: bash -c "./bootstrap"
    - name: configure
      run: bash -c "./configure"
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck
    - name: list dist files
      run: dir dist
    - name: create release
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
        body: |
          Automated release for build ${{ github.run_number }}.
    - name: upload release assets
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ipmitool-*.tar.gz
        asset_name: ipmitool-${{ github.run_number }}.tar.gz
        asset_content_type: application/gzip
